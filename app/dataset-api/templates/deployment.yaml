---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:   
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        system.ingestion: "true"
        system.querying: "true"
        system.api: "true"
    spec:
      initContainers:
        - name: init-database
          image: bitnami/postgresql:14
          command:
            - /bin/bash
            - -c
            - |
              PGPASSWORD="prIdmPsAmg" psql -h "postgresql.postgres" -p "5432" -U "postgres" -d "postgres" -f /scripts/init.sql
          volumeMounts:
            - name: init-script
              mountPath: /scripts
      volumes:
        - name: init-script
          configMap:
            name: {{ .Chart.Name }}-config

      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecrets }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.image_tag }}"
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              cpu: "{{ .Values.cpu_requests }}"
              memory: "{{ .Values.memory_requests }}"
            limits:
              cpu: "{{ .Values.cpu_limits }}"
              memory: "{{ .Values.memory_limits }}"

          envFrom:
           - configMapRef:
              name: {{ .Chart.Name }}-config
          ports:
            - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Chart.Name }}-service"
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
    system.ingestion: "true"
    system.querying: "true"
    system.api: "true"
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: http-{{ .Chart.Name }}
      protocol: TCP
      port: {{ .Values.network.targetport }}
  selector:
    app: {{ .Chart.Name }}